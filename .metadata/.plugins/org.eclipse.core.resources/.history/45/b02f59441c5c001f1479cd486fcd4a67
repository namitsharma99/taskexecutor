package com.src.main;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import com.src.constant.Constants;
import com.src.ececute.TaskExecutorImpl;

public class Runner {

	private static String taskNature  = Constants.CPU_INTENSIVE;
	


	public static void main(String[] args) {

		int threadCount = getOptimumThreadCount(taskNature);

		ExecutorService service = Executors.newFixedThreadPool(threadCount);
		
		TaskExecutorImpl taskExecutorImpl = new TaskExecutorImpl(service);
		
		
		taskExecutorImpl.submitTask(null)
		

	}

	private static int getOptimumThreadCount(String task) {

		if (task.equals(Constants.CPU_INTENSIVE)) {
			return Runtime.getRuntime().availableProcessors();
		} else if (task.equals(Constants.IO_INTENSIVE)) {
			return 100;
		} else {
			return 10;
		}
	}

}
